{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Id": {
				"anyOf": [
					{
						"type": "string"
					},
					{
						"type": "number",
						"format": "double"
					}
				]
			},
			"UUID": {
				"type": "string",
				"format": "uuid",
				"description": "Stringified UUIDv4.\r\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
				"pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
			},
			"Status": {
				"type": "string",
				"enum": [
					"ACTIVE",
					"INACTIVE",
					"DISABLED"
				]
			},
			"Role": {
				"type": "string",
				"enum": [
					"BASIC",
					"ADMIN"
				]
			},
			"User": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/Id"
					},
					"uuid": {
						"$ref": "#/components/schemas/UUID"
					},
					"name": {
						"type": "string"
					},
					"surname": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/Status"
					},
					"role": {
						"$ref": "#/components/schemas/Role"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time"
					},
					"version": {
						"type": "number",
						"format": "double"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"HttpStatusCode": {
				"description": "Hypertext Transfer Protocol (HTTP) response status codes.",
				"enum": [
					100,
					101,
					102,
					200,
					201,
					202,
					203,
					204,
					205,
					206,
					207,
					208,
					226,
					300,
					301,
					302,
					303,
					304,
					305,
					306,
					307,
					308,
					400,
					401,
					402,
					403,
					404,
					405,
					406,
					407,
					408,
					409,
					410,
					411,
					412,
					413,
					414,
					415,
					416,
					417,
					418,
					421,
					422,
					423,
					424,
					426,
					428,
					429,
					431,
					451,
					500,
					501,
					502,
					503,
					504,
					505,
					506,
					507,
					508,
					510,
					511
				],
				"type": "number"
			},
			"UsersServiceResponse": {
				"properties": {
					"statusCode": {
						"$ref": "#/components/schemas/HttpStatusCode"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/User"
						},
						"type": "array"
					}
				},
				"required": [
					"statusCode",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserServiceResponse": {
				"properties": {
					"statusCode": {
						"$ref": "#/components/schemas/HttpStatusCode"
					},
					"data": {
						"$ref": "#/components/schemas/User"
					}
				},
				"required": [
					"statusCode",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Company": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/Id"
					},
					"uuid": {
						"$ref": "#/components/schemas/UUID"
					},
					"name": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time"
					},
					"version": {
						"type": "number",
						"format": "double"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CompaniesServiceResponse": {
				"properties": {
					"statusCode": {
						"$ref": "#/components/schemas/HttpStatusCode"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/Company"
						},
						"type": "array"
					}
				},
				"required": [
					"statusCode",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CompanyServiceResponse": {
				"properties": {
					"statusCode": {
						"$ref": "#/components/schemas/HttpStatusCode"
					},
					"data": {
						"$ref": "#/components/schemas/Company"
					}
				},
				"required": [
					"statusCode",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LocalUnit": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/Id"
					},
					"uuid": {
						"$ref": "#/components/schemas/UUID"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"deletedAt": {
						"type": "string",
						"format": "date-time"
					},
					"version": {
						"type": "number",
						"format": "double"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"LocalUnitsServiceResponse": {
				"properties": {
					"statusCode": {
						"$ref": "#/components/schemas/HttpStatusCode"
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/LocalUnit"
						},
						"type": "array"
					}
				},
				"required": [
					"statusCode",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LocalUnitServiceResponse": {
				"properties": {
					"statusCode": {
						"$ref": "#/components/schemas/HttpStatusCode"
					},
					"data": {
						"$ref": "#/components/schemas/LocalUnit"
					}
				},
				"required": [
					"statusCode",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"authorizationUrl": "http://localhost:8080/api/v1/auth/login",
				"name": "access_token",
				"scopes": {
					"ADMIN": "full crud auth"
				}
			}
		}
	},
	"info": {
		"title": "Argos-IoT APIs",
		"version": "0.0.2",
		"description": "Restful APIs by Argos-IoT",
		"contact": {
			"name": "Marco Napoleone",
			"email": "napoleonemarco25@gmial.com"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/users": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UsersServiceResponse"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"ADMIN"
						]
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserServiceResponse"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"ADMIN"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					}
				}
			}
		},
		"/users/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserServiceResponse"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"ADMIN"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Id"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserServiceResponse"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"ADMIN"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "LogicDelete",
				"responses": {
					"204": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserServiceResponse"
								}
							}
						}
					}
				},
				"description": "Logic delete a user",
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": [
							"ADMIN"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Id"
						}
					}
				]
			}
		},
		"/companies": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CompaniesServiceResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Company"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CompanyServiceResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Company"
				],
				"security": [
					{
						"jwt": [
							"ADMIN"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Company"
							}
						}
					}
				}
			}
		},
		"/companies/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CompanyServiceResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Company"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Id"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CompanyServiceResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Company"
				],
				"security": [
					{
						"jwt": [
							"ADMIN"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Company"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "LogicDelete",
				"responses": {
					"204": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CompanyServiceResponse"
								}
							}
						}
					}
				},
				"description": "Logic delete a company",
				"tags": [
					"Company"
				],
				"security": [
					{
						"jwt": [
							"ADMIN"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Id"
						}
					}
				]
			}
		},
		"/companies/{companyId}/local-units": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LocalUnitsServiceResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Local unit"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "companyId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Id"
						}
					}
				]
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LocalUnitServiceResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Local unit"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LocalUnit"
							}
						}
					}
				}
			}
		},
		"/companies/{companyId}/local-units/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LocalUnitServiceResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Local unit"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Id"
						}
					}
				]
			},
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LocalUnitServiceResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Local unit"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Id"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LocalUnit"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "LogicDelete",
				"responses": {
					"204": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LocalUnitServiceResponse"
								}
							}
						}
					}
				},
				"description": "Logic delete a localUnit",
				"tags": [
					"Local unit"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/Id"
						}
					}
				]
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"token": {},
										"result": {
											"type": "boolean"
										}
									},
									"required": [
										"token",
										"result"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"password": {
										"type": "string"
									},
									"email": {
										"type": "string"
									}
								},
								"required": [
									"password",
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/auth/register": {
			"post": {
				"operationId": "Register",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"surname": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"password": {
										"type": "string"
									},
									"email": {
										"type": "string"
									}
								},
								"required": [
									"surname",
									"name",
									"password",
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/api/v1"
		}
	]
}